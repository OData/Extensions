<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Extensions.OData.Migration</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Extensions.OData.Migration.ExtensionMethods">
            <summary>
            Contains extension methods for V3 IEdmType and System.Uri
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.OData.Migration.ExtensionMethods.Append(System.Uri,System.String)">
            <summary>
            (probably temporary until cleaner solution) method to concatenate a string to URI
            </summary>
            <param name="uri">base URI</param>
            <param name="extra">string to append</param>
            <returns>base URI with string appended</returns>
        </member>
        <member name="M:Microsoft.Extensions.OData.Migration.ExtensionMethods.FullTypeName(Microsoft.Data.Edm.IEdmType)">
            <summary>
            Attempts multiple casts on Data.Edm.IEdmType to reach derived classes and extract full name.
            Implementation taken (copy-pasted and primitiveType case commented) from OData V4 ExtensionMethods.
            </summary>
            <param name="type">OData V3 type to extract name of</param>
            <returns>Full name of V3 type</returns>
        </member>
        <member name="M:Microsoft.Extensions.OData.Migration.ExtensionMethods.FullName(Microsoft.Data.Edm.IEdmSchemaElement)">
            <summary>
            Handles specific case of extracting a name from Data.Edm.IEdmSchemaElement.
            Implementation taken (copy-pasted and primitiveType case commented) from OData V4 ExtensionMethods.
            </summary>
            <param name="element">OData V3 IEdmSchemaElement to extract name of</param>
            <returns>Full name of V3 IEdmSchemaElement</returns>
        </member>
        <member name="T:Microsoft.Extensions.OData.Migration.MigrationOptions">
            <summary>
            Container for parameters to pass into middleware.
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.OData.Migration.TranslationMiddleware">
            <summary>
            Translation Middleware currently converts V3 URI to V4 URI (future: converts query, request body as well)
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.OData.Migration.TranslationMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.Extensions.OData.Migration.MigrationOptions)">
            <summary>
            Instantiates a translation middleware.
            </summary>
            <param name="next">Delegate required by middleware</param>
            <param name="options">Contains information necessary for segment translation</param>
        </member>
        <member name="M:Microsoft.Extensions.OData.Migration.TranslationMiddleware.#ctor(Microsoft.Data.Edm.IEdmModel,Microsoft.OData.Edm.IEdmModel,Microsoft.Extensions.OData.Migration.MigrationOptions)">
            <summary>
            Temporary constructor for unit testing given specific models that are already built (rather than passing in by edmx)
            </summary>
            <param name="v3Model">V3 model to translate from</param>
            <param name="v4Model">V4 model to translate to</param>
            <param name="options">Contains information necessary for segment translation</param>
        </member>
        <member name="M:Microsoft.Extensions.OData.Migration.TranslationMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Middleware 
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.OData.Migration.TranslationMiddleware.TranslateUri(System.Uri)">
            <summary>
            Accept a V3 request URI and return a V4 request URI.  V4 request URI retains base path.
            </summary>
            <param name="requestUri">V3 Request URI</param>
            <returns>V4 Request URI</returns>
        </member>
        <member name="T:Microsoft.Extensions.OData.Migration.UriSegmentTranslator">
            <summary>
            UriSegmentTranslator contains logic to translate every kind of V3 path segment into
            its corresponding V4 counterpart path segment.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.OData.Migration.UriSegmentTranslator.#ctor(Microsoft.OData.Edm.IEdmModel)">
            <summary>
            Initialize UriSegmentTranslator
            </summary>
            <param name="v4model">v4 model is used to look up corresponding entities/etc. from v3 to create v4 segments</param>
        </member>
        <member name="M:Microsoft.Extensions.OData.Migration.UriSegmentTranslator.Translate(Microsoft.Data.OData.Query.SemanticAst.TypeSegment)">
            <summary>
            Translate a v3 TypeSegment (TODO: EXAMPLE) into v4 TypeSegment
            </summary>
            <param name="segment">OData V3 TypeSegment</param>
            <returns>OData V4 TypeSegment</returns>        
        </member>
        <member name="M:Microsoft.Extensions.OData.Migration.UriSegmentTranslator.Translate(Microsoft.Data.OData.Query.SemanticAst.NavigationPropertySegment)">
            <summary>
            Translates a v3 NavigationPropertySegment (TODO: EXAMPLE) into v4 NavigationPropertySegment
            </summary>
            <param name="segment">OData V3 NavigationPropertySegment</param>
            <returns>OData V4 NavigationPropertySegment</returns>
        </member>
        <member name="M:Microsoft.Extensions.OData.Migration.UriSegmentTranslator.Translate(Microsoft.Data.OData.Query.SemanticAst.EntitySetSegment)">
            <summary>
            Translates a V3 EntitySetSegment (e.g. "/Boxes") to a V4 EntitySetSegment
            </summary>
            <param name="segment">OData V3 EntitySetSegment</param>
            <returns>OData V4 EntitySetSegment</returns>
        </member>
        <member name="M:Microsoft.Extensions.OData.Migration.UriSegmentTranslator.Translate(Microsoft.Data.OData.Query.SemanticAst.KeySegment)">
            <summary>
            Translates a V3 KeySegment (e.g. "/Boxes(1)") to a V4 KeySegment
            </summary>
            <param name="segment">OData V3 KeySegment</param>
            <returns>OData V4 KeySegment</returns>
        </member>
        <member name="M:Microsoft.Extensions.OData.Migration.UriSegmentTranslator.Translate(Microsoft.Data.OData.Query.SemanticAst.PropertySegment)">
            <summary>
            Translates at V3 PropertySegment (e.g. "/Boxes(1)/Name") into a V4 PropertySegment
            </summary>
            <param name="segment">OData V3 PropertySegment</param>
            <returns>OData V4 PropertySegment</returns>
        </member>
        <member name="M:Microsoft.Extensions.OData.Migration.UriSegmentTranslator.Translate(Microsoft.Data.OData.Query.SemanticAst.OperationSegment)">
            <summary>
            Translates a V3 OperationSegment to V4 OperationSegment by locating all matching function imports in the v4 model
            and constructing a new V4 OperationSegment with all found operation segments.
            </summary>
            <param name="segment"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.OData.Migration.UriSegmentTranslator.Translate(Microsoft.Data.OData.Query.SemanticAst.OpenPropertySegment)">
            <summary>
            Translates a V3 OpenPropertySegment into its V4 equivalent: a DynamicPathSegment.
            </summary>
            <param name="segment">V3 OpenPropertySegment</param>
            <returns>V4 DynamicPathSegment</returns>
        </member>
        <member name="M:Microsoft.Extensions.OData.Migration.UriSegmentTranslator.Translate(Microsoft.Data.OData.Query.SemanticAst.CountSegment)">
            <summary>
            Translates V3 CountSegment to V4 CountSegment by simply returning the V4 CountSegment instance,
            which is what is needed in all cases.
            </summary>
            <param name="segment">OData V3 CountSegment</param>
            <returns>OData V4 CountSegment</returns>
        </member>
        <member name="M:Microsoft.Extensions.OData.Migration.UriSegmentTranslator.Translate(Microsoft.Data.OData.Query.SemanticAst.NavigationPropertyLinkSegment)">
            <summary>
            Translates a v3 NavigationPropertyLinkSegment (TODO: EXAMPLE) into v4 NavigationPropertyLinkSegment
            </summary>
            <param name="segment">OData V3 NavigationPropertyLinkSegment</param>
            <returns>OData V4 NavigationPropertyLinkSegment</returns>
        </member>
        <member name="M:Microsoft.Extensions.OData.Migration.UriSegmentTranslator.Translate(Microsoft.Data.OData.Query.SemanticAst.ValueSegment)">
            <summary>
            Translates a v3 ValueSegment (e.g. /Boxes(1)/Name/$value) into a v4 ValueSegment
            </summary>
            <param name="segment">OData V3 ValueSegment</param>
            <returns>OData V4 ValueSegment</returns>
        </member>
        <member name="M:Microsoft.Extensions.OData.Migration.UriSegmentTranslator.Translate(Microsoft.Data.OData.Query.SemanticAst.BatchSegment)">
            <summary>
            Translates V3 BatchSegment to V4 BatchSegment by simply returning the V4 BatchSegment instance,
            which is what is needed in all cases.
            </summary>
            <param name="segment">OData V3 BatchSegment</param>
            <returns>OData V4 BatchSegment</returns>
        </member>
        <member name="M:Microsoft.Extensions.OData.Migration.UriSegmentTranslator.Translate(Microsoft.Data.OData.Query.SemanticAst.BatchReferenceSegment)">
            <summary>
            Translates a V3 BatchReferenceSegment to V4 BatchReferenceSegment.
            </summary>
            <param name="segment">OData V3 BatchReferenceSegment</param>
            <returns>OData V4 BatchReferenceSegment</returns>
        </member>
        <member name="M:Microsoft.Extensions.OData.Migration.UriSegmentTranslator.Translate(Microsoft.Data.OData.Query.SemanticAst.MetadataSegment)">
            <summary>
            Translates V3 MetadataSegment to V4 MetadataSegment by simply returning the V4 MetadataSegment instance,
            which is what is needed in all cases.
            </summary>
            <param name="segment">OData V3 MetadataSegment</param>
            <returns>OData V4 MetadataSegment</returns>
        </member>
        <member name="T:AssemblyRef">
            <summary>
            Sets public key string for friend assemblies.
            </summary>
        </member>
        <member name="F:AssemblyRef.ProductPublicKey">
            <summary>ProductPublicKey is an official MS supported public key for external releases.</summary>
        </member>
        <member name="F:AssemblyRef.TestPublicKey">
            <summary>TestPublicKey is an unsupported strong key for testing purpose only.</summary>
        </member>
        <member name="F:AssemblyRef.ProductPublicKeyToken">
            <summary>Product public key token.</summary>
        </member>
    </members>
</doc>
