<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>

    <!-- target 2.0 only for library project.-->
    <TargetFramework>netstandard2.0</TargetFramework>

    <!-- Global settings that apply unconditionally. -->
    <EnlistmentRoot>$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), build.root))\</EnlistmentRoot>
    
    <!--
    Code analysis not work for .net standard 2.0, see https://github.com/dotnet/roslyn-analyzers/issues/1313
    -->
    <RunCodeAnalysis>false</RunCodeAnalysis>
  
    <!--Including pdb file to support SourceLink, see NuGet #4142 https://github.com/NuGet/Home/issues/4142-->
    <AllowedOutputExtensionsInPackageBuildOutputFolder>
      $(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb
    </AllowedOutputExtensionsInPackageBuildOutputFolder>

    <!--Support latest language.-->
    <LangVersion>latest</LangVersion>

    <!--treat warnings as errors for library.-->
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
  </PropertyGroup>

  <PropertyGroup>
    <BuildInOSS Condition="'$(BuildInOSS)' == '' and !Exists('$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), build.root))\_BuildCommon')">true</BuildInOSS>
  </PropertyGroup>

  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), build.root))\tools\CustomMSBuild\TargetFrameworkPath.props" Condition="'$(BuildInOSS)' == 'true'"/>
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), build.root))\_BuildCommon\Extensions\TargetFrameworkPath.props" Condition="'$(BuildInOSS)' != 'true'"/>

  <PropertyGroup>
    <RelativeOutputPath>Product\$(RelativeOutputPath)</RelativeOutputPath>
    <EnableStyleCop Condition="'$(TargetFrameworkVersion)' == 'v3.5'">false</EnableStyleCop>
    <StyleCopOverrideSettingsFile Condition="'$(StyleCopOverrideSettingsFile)' == ''">$(MSBuildThisFileDirectory)Common.StyleCop</StyleCopOverrideSettingsFile>
    <SigningScenario Condition="'$(SigningScenario)' == '' and '$(Configuration)' == 'Release'">$(SigningScenarioForRelease)</SigningScenario>
    <SigningScenario Condition="'$(SigningScenario)' == '' and '$(TargetFrameworkIdentifier)' != 'Silverlight'">Delay</SigningScenario>
    <SigningType Condition="'$(SigningType)' == ''">Product</SigningType>
    <ShouldGenerateAssemblyAttributeFile Condition="'$(ShouldGenerateAssemblyAttributeFile)' == '' and '$(MSBuildProjectExtension)' != '.nuproj' and '$(MSBuildProjectExtension)' != '.wixproj'">true</ShouldGenerateAssemblyAttributeFile>
  
    <!-- Disable GenerateAssemblyInfo to use the existing AssemblyInfo.cs -->
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <AssemblyOriginatorKeyFile>$(EnlistmentRoot)tools\StrongNamePublicKeys\35MSSharedLib1024.snk</AssemblyOriginatorKeyFile>
    <DelaySign>True</DelaySign>
    <SignAssembly>True</SignAssembly>
    <DocumentationFile>$(AssemblyName).xml</DocumentationFile>
    <CopyOutputSymbolsToOutputDirectory>true</CopyOutputSymbolsToOutputDirectory>
    <DefineConstants>$(DefineConstants);ODATA_CLIENT;PORTABLELIB;SUPPRESS_PORTABLELIB_TARGETFRAMEWORK_ATTRIBUTE;SUPPRESS_SECURITY_RULES</DefineConstants>
    <EnableLocalization>true</EnableLocalization>
  </PropertyGroup>

  <ItemGroup>
    <CodeAnalysisDictionary Include="$(MSBuildThisFileDirectory)CustomDictionary.xml"/>
  </ItemGroup>

  <Import Project="..\Build.props" />
  <Import Project="$(CustomBuildExtensionsPath)\Versioning.props" />

  <!-- This PropertyGroup should always be after the import of Build.props because it's extending the value of NugetPackOptions which is defined in Nuget.props which is included using Build.props -->
  <PropertyGroup>
    <!-- Overrides the value of NugetPackOptions in Nuget.props in CBT to add -Symbols option -->
    <NugetPackOptions>$(NugetPackOptions) -Symbols</NugetPackOptions>
    <NugetPackProperties>$(NugetPackProperties);SourcesRoot=$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), build.root))</NugetPackProperties>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="$(AssemblyKeysCSharpFilePath)">
      <IncludeInOpenSource>false</IncludeInOpenSource>
    </Compile>
  </ItemGroup>
</Project>
